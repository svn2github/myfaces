<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  
  <parent>
      <groupId>org.apache.myfaces</groupId>
      <artifactId>myfaces</artifactId>
      <version>14</version>
  </parent>

  <groupId>org.apache.myfaces.tomahawk</groupId>
  <artifactId>tomahawk-project</artifactId>
  <packaging>pom</packaging>
  <name>Tomahawk Project</name>
  <url>http://myfaces.apache.org/tomahawk-project</url>
  <version>1.1.15-SNAPSHOT</version>	 
  <description>
  Apache MyFaces Tomahawk is a sub-project of Apache MyFaces which provides an extensive sets
  of custom components for use in your JSF-projects. Additionally, Tomahawk includes many custom
  features helping you to implement JSF-projects more easily.
  </description>
  
  <scm>
    <connection>scm:svn:http://svn.apache.org/repos/asf/myfaces/tomahawk/trunk</connection>
    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/myfaces/tomahawk/trunk</developerConnection>
    <url>http://svn.apache.org/viewcvs.cgi/myfaces/tomahawk/trunk</url>
  </scm>  

  <issueManagement>
    <system>jira</system>
    <url>http://issues.apache.org/jira/browse/TOMAHAWK</url>
  </issueManagement>

  <build>
      <!-- Since Maven 3.0, this is required to add scpexe as protocol for deploy. -->
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0-beta-7</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <!--
          - Make a checkstyle violation a compile error. Note that if a compile error occurs,
          - further information can be found in target/site/checkstyle.html (present even when
          - just the compile goal and not the site goal has been run). Note also that child
          - projects may redeclare this plugin and provide different configuration settings
          - to use different checks (more or less strict than the default).
          -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>verify-style</id>
            <phase>verify</phase>
            <goals><goal>check</goal></goals>
          </execution>
        </executions>
        <configuration>
          <configLocation>default/myfaces-checks-minimal.xml</configLocation>
          <headerLocation>default/myfaces-header.txt</headerLocation>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.5</version>
          </plugin>
          <!-- 
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.0.4</version>
          </plugin>
           -->
        </plugins>
    </pluginManagement>
  </build>

  <dependencyManagement>
    <dependencies>
    
        <!-- COMPILE DEPENDENCIES -->
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>1.1.1</version>
          <scope>compile</scope>
        </dependency>
    
        <dependency>
          <groupId>commons-validator</groupId>
          <artifactId>commons-validator</artifactId>
          <version>1.3.1</version>
          <scope>compile</scope>
        </dependency>
    
        <dependency>
          <groupId>commons-fileupload</groupId>
          <artifactId>commons-fileupload</artifactId>
          <version>1.3.3</version>
          <scope>compile</scope>
        </dependency>
    
        <!-- Transitive dependency from commons-fileupload.
        in 1.2 it was declared optional, but t:inputFileUpload
        uses it indirectly, so it is necessary to include it
        in our pom as runtime dependency  -->
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
          <version>1.3.2</version>
          <scope>runtime</scope>
        </dependency>
    
        <dependency>
          <groupId>commons-collections</groupId>
          <artifactId>commons-collections</artifactId>
          <version>3.2.1</version>
          <scope>compile</scope>
        </dependency>
    
        <dependency>
          <groupId>commons-el</groupId>
          <artifactId>commons-el</artifactId>
          <version>1.0</version>
          <scope>compile</scope>
        </dependency>
    
        <dependency>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
          <version>1.3</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>commons-lang</groupId>
          <artifactId>commons-lang</artifactId>
          <version>2.4</version>
          <scope>compile</scope>
        </dependency>
        
        <dependency>
            <groupId>com.sun.facelets</groupId>
            <artifactId>jsf-facelets</artifactId>
            <version>1.1.14</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
          <groupId>struts</groupId>
          <artifactId>struts</artifactId>
          <version>1.2.9</version>
          <scope>compile</scope>
          <optional>true</optional>
        </dependency>
    
        <dependency>
          <groupId>org.apache.tiles</groupId>
          <artifactId>tiles-core</artifactId>
          <version>2.0.6</version>
          <scope>compile</scope>
          <optional>true</optional>        
        </dependency>

        <!-- Required for wrapper of FacesContext (compatible with 1.2) -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-el_1.0_spec</artifactId>
            <version>1.0.2</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
          <groupId>batik</groupId>
          <artifactId>batik-awt-util</artifactId>
          <version>1.6-1</version>
          <scope>compile</scope>
        </dependency>   

        <dependency>
          <groupId>oro</groupId>
          <artifactId>oro</artifactId>
          <version>2.0.8</version>
          <scope>compile</scope>
        </dependency>
        
        <!-- TEST DEPENDENCIES -->
        
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.8.1</version>
          <scope>test</scope>
        </dependency>
        
        <dependency>
          <groupId>org.apache.myfaces.test</groupId>
          <artifactId>myfaces-test20</artifactId>
          <version>1.0.0</version>
          <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.apache.shale</groupId>
            <artifactId>shale-test</artifactId>
            <version>1.0.4</version>
        </dependency>

        <dependency>
          <groupId>jmock</groupId>
          <artifactId>jmock</artifactId>
          <version>1.0.1</version>
          <scope>test</scope>
        </dependency>
    
        <dependency>
          <groupId>jmock</groupId>
          <artifactId>jmock-cglib</artifactId>
          <version>1.0.1</version>
          <scope>test</scope>
        </dependency>
    
        <dependency>
          <groupId>maven-taglib</groupId>
          <artifactId>maven-taglib-plugin</artifactId>
          <version>1.4.2</version>
          <scope>test</scope>
        </dependency>   

        <dependency>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
          <version>1.5.2</version>
          <scope>test</scope>
        </dependency>
    
        <dependency>
          <groupId>cactus</groupId>
          <artifactId>cactus</artifactId>
          <version>13-1.7.1</version>
          <scope>test</scope>
        </dependency>
    
        <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjrt</artifactId>
          <version>1.5.4</version>
          <scope>test</scope>
        </dependency>
    
        <dependency>
          <groupId>easymock</groupId>
          <artifactId>easymock</artifactId>
          <version>1.1</version>
          <scope>test</scope>
        </dependency>
    
        <dependency>
          <groupId>easymock</groupId>
          <artifactId>easymockclassextension</artifactId>
          <version>1.1</version>
          <scope>test</scope>
        </dependency>

    </dependencies>
  </dependencyManagement>

<!--
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <configLocation>default/myfaces-checks-standard.xml</configLocation>
          <headerLocation>default/myfaces-header.txt</headerLocation>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
-->

  <distributionManagement>
    <site>
      <id>apache-site</id>
      <name>Apache Website</name>
      <url>scpexe://people.apache.org/www/myfaces.apache.org/tomahawk-project/</url>
    </site>
  </distributionManagement>

  <profiles>
    <!-- This profile is invoked by -DprepareRelease=true.  This allows mvn release:prepare to
         run successfully on the assembly projects. -->
        <profile>
            <id>prepare-release</id>
            <activation>
                <property>
                    <name>prepareRelease</name>
                </property>
            </activation>
            <modules>
                <module>assembly</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-release-plugin</artifactId>
                        <configuration>
                            <arguments>-DprepareRelease</arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>perform-release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <modules>
                <module>assembly</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-release-plugin</artifactId>
                        <configuration>
                            <arguments>-Papache-release -DperformRelease</arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    <profile>
      <id>generate-site</id>
      <modules>
        <module>site</module>
      </modules>
    </profile>
  </profiles>
    
  <modules>
    <module>core</module>
    <module>core12</module>
    <module>core20</module>
    <module>core21</module>
    <module>examples</module>
    <module>sandbox</module>
  </modules>

  <properties>
    <!--
      - Define what version of myfaces core 1.1 libs tomahawk and sandbox
      - code will be compiled and tested against.
      -
      - This also affects what version of myfaces the sandbox examples run
      - against *when jsf1.1 is selected*. When jsf1.2 or a Sun implementation
      - are selected for running the examples, this is ignored.
      -->
    <myfaces-core11-version>1.1.10</myfaces-core11-version>

    <!--  
      - Define what shared lib version tomahawk and sandbox code will be compiled with.
      -->
    <myfaces-shared11-version>2.0.14</myfaces-shared11-version>

    <!--
      - Define what version of myfaces core 1.2 the tomahawk core12 and sandbox12
      - code will be compiled and tested against.
      -
      - This also affects what version of myfaces the sandbox examples run
      - against *when jsf1.2 is selected*. When jsf1.1 or a Sun implementation
      - are selected for running the examples, this is ignored.
      -->
    <myfaces-core12-version>1.2.12</myfaces-core12-version>

    <!--  
      - Define what shared lib version tomahawk12 and sandbox12 code will be compiled with.
      -->
    <myfaces-shared12-version>3.0.12</myfaces-shared12-version>
    <!--
      - Define what version of myfaces core 2.0 the tomahawk core20 and sandbox20
      - code will be compiled and tested against.
      -
      - This also affects what version of myfaces the sandbox examples run
      - against *when jsf2.0 is selected*. When jsf1.1 or a Sun implementation
      - are selected for running the examples, this is ignored.
      -->
    <myfaces-core20-version>2.0.15</myfaces-core20-version>

    <!--  
      - Define what shared lib version tomahawk20 and sandbox20 code will be compiled with.
      -->
    <myfaces-shared20-version>4.0.16</myfaces-shared20-version>

    <myfaces-shared21-version>4.1.8</myfaces-shared21-version>

    <myfaces-core21-version>2.1.9</myfaces-core21-version>

    <myfaces-builder-annotations-version>1.0.9</myfaces-builder-annotations-version>

    <myfaces-builder-plugin-version>1.0.10</myfaces-builder-plugin-version>
  </properties>

</project>
